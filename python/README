hello.py: a simple example.
ofile.py: another example.
web.py: scraping web example.
volume.sh: caller of volume*.py file.
volume.py: scrap listed volume.
volume_otc.py: scrap otc volume.
overview.sh: overview of a ticker.
range52week.py: get 52 week range,
range52week_cmp.sh: compare 52 week range between tickers.
t50_component.py: scrap T50 components via selenium.
margin_ratio.py: get margin ratio for a ticker.
margin_ratio_cmp.sh: compare margin ration between tickers.
capital.py: get capital of a ticker.
capital_cmp.sh: compare capital of tickers.
beta.py: get beta, PE of a ticker.
beta_cmp.sh: compare beta of tickers.
cb.py: find if CB is issued for a ticker by webbrowser.
quote.py: get OHLC data frame.
instant_quote.sh: get OHLC data frame periodically.
board.py: get board holdings.
basic.py: check if CB issued by scraping POST reply.
get_mrkt_value.py: scrap ticker market values.
transaction.py: parsing type 2 daily transaction by ticker symbol from bsr.
transaction.sh: streamline type 2 to calc.
workbench.py: keep current workbench.
branch.py: browsing major broker transactions by ticker and date.
launch.py: launch libreoffice.
briefing.sh: redirect overview.sh output to datafiles.
money_flow.sh: trigger get_weighted_index.py
get_weighted_index.py: parse sector performance from pchome stock.
msci_components.py: scrap MSCI TAIEX components from histock.
rank.sh: gather market value, t50, and msci rank together.
merge.py: mix 3 output files then open libreoffice.
gpm.py: scrap GPM/OPM from pages,
gpm_cmp.sh: compare ticker Gross Profit Margin with competiors.
get_listed.py: get listed tickers from TAIEX to file,
get_listed.sh: get 3 types of listed tickers,
annual_report.py: browse latest annual report.
simple_plot.py: simple matplotlib example.
correlation.py: correlating 2 or more US tickers,
activity.py: counting chips,
looping.py: looping listed companies.
activities.sh: looping company activity by type.
announcement.py: launch TSEC announcement,
datafiles/clusters: a cluster of tickers for further comparison,
datafiles/[ticker].txt: output of overview.sh,
datafiles/listed_2.txt: TAIEX tickers.
datafiles/listed_4.txt: TPEX tickers.
datafiles/listed_5.txt: TPEX otc tickers.
pe.py: get PER of a ticker.
range52w.py: get quote, name, 52w range, and percent% of a ticker.
status.sh: generate activity, per, range52w by listed type.
uno.py: libreoffice integration.
web_search.py: launch all web page search.
a905_component.py: get all A905 index components.
price_tags.py: show price tags on daily base.
taxid.py: find tax id by ticker and title.
top150.py: get top 150 market value.
m100_components.py: get m100 components.
uno_kicks.py: update libreoffice calc, as well as testbed.
uno_kicks.sh: scripting update quote.
uno_status.sh: update quote, activity, per of a ticker to calc.
uno_quotes.sh: batch updating quote.
uno_eps.sh: looping eps.
uno_activity.sh: looping activity.
gmap.py: trigger jsfiddle show plots.
gtrend.py:
geopy.py:
br.py: fetch major transactions by (broker, date)
br_ticker.py: trial tetch transactions from bsr.
br.sh:
transotc.py: parsing type 4 transactions from tpex.
